% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compute_coord_and_rho.R
\name{compute_coord_and_rho}
\alias{compute_coord_and_rho}
\title{Compute and Correlate Coordination Scores}
\usage{
compute_coord_and_rho(
  seurat_obj,
  signal_vector,
  graph,
  alpha = 0.5,
  n_iter = 10
)
}
\arguments{
\item{seurat_obj}{A Seurat object with spatial data already loaded.}

\item{signal_vector}{A named numeric vector of raw signal values (names must match spot IDs).}

\item{graph}{A sparse adjacency matrix (class \code{dgCMatrix}) or \code{igraph}
object encoding spot-to-spot connectivity. Must match \code{seurat_obj}.}

\item{alpha}{Numeric between 0 and 1 for diffusion damping; default is 0.5.}

\item{n_iter}{Integer for number of propagation iterations; default is 10.}
}
\value{
A list with two elements:
\itemize{
\item{\code{seurat_obj}}{The input Seurat object, but now with three new columns in \code{@meta.data}:}
\itemize{
\item{\code{signal_raw}}{the original \code{signal_vector} repeated per-spot.}
\item{\code{signal_coord}}{the propagated (coordination) score per spot.}
\item{\code{signal_rho}}{the single Spearman \eqn{\rho}, repeated for every spot (so you can inspect it easily).}
}
\item{\code{rho}}{A single numeric value: Spearman \eqn{\rho} between \code{signal_raw} and \code{signal_coord}.}
}
}
\description{
\enumerate{
\item Propagate a "mossy" signal across spatial spots (using a sparse graph).
\item Store both raw and propagated values in \code{@meta.data}.
\item Compute a single Spearman \eqn{\rho} across all spots between raw and propagated signals,
and also write that same \eqn{\rho} back into metadata (so the user can inspect it).
}
}
\details{
Internally, this function calls \code{\link{propagate_signal_sparse}()} to do the graph-based diffusion.
Once you have the vector of propagated scores, it computes
\eqn{ \rho = \text{cor}( \text{raw}, \text{coord}, \text{method} = "spearman" ) }.
That one number is stored back in \code{seurat_obj@meta.data\$signal_rho} for convenience.
}
\examples{
\dontrun{
  library(CereNet)
  library(Seurat)
  library(Matrix)
  # Create a tiny Seurat object:
  mat <- matrix(runif(6), nrow = 2, ncol = 3)
  rownames(mat) <- c("Gene1", "Gene2")
  colnames(mat) <- c("SpotA", "SpotB", "SpotC")
  so <- CreateSeuratObject(counts = mat)
  # Build a simple signal vector and identity graph:
  sig <- runif(3); names(sig) <- colnames(so)
  graph <- Diagonal(3)
  # Run function:
  out <- compute_coord_and_rho(so, sig, graph)
  print(out$rho)
}
}
